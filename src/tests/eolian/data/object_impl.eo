class Object_Impl (Base) {
   properties {
      a {
         set {
            return: bool (false);
         }
         get {
         }
         keys {
            const(char)* part;
         }
         values {
            own(list<int>*) value @const_set;
         }
      }
      b {
         set {
         }
         get {
            /* set as virtual pure - no implementation expected */
         }
         values {
            own(list<int>*) value;
         }
      }
   }
   methods {
      constructor_1 {
         params {
            @in int a;
            @in char b;
         }
      }
      constructor_2 {
      }
      foo1 {
         /*@ comment foo */
         params {
            @in int a; /*@ a */
            @inout char b;
            @out double c;
         }
         return: char * (null); /*@ comment for method return */
      }
      foo2 @const {
         /*@ comment foo */
         params {
            @in int a;
            @in const(char)* b;
         }
      }
      pure_foo3 {
         /* set as virtual pure - no implementation expected */
      }
   }
   implements {
      class.constructor;
      class.destructor;
      Base.constructor;
      Base.destructor;
      @virtual .pure_foo3;
      @virtual .b.get;
   }
   constructors {
      .constructor_1;
      .constructor_2;
   }
}
